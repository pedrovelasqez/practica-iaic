/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * OpcionesView.java
 *
 * Created on 05-may-2009, 16:09:11
 */

package vista;

import conocimiento.LanzadorJess;
import java.io.FileInputStream;
import java.net.URI;
import java.util.Properties;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jess.JessException;

/**
 *
 * @author Victor
 */
public class InformeView extends javax.swing.JFrame {

    private LanzadorJess lanzadorJess;
    private int tam;
    private Vector claves;
    /** Creates new form OpcionesView */
    public InformeView() {
        initComponents();

        this.setLocationRelativeTo(null);
        
    }

    InformeView(LanzadorJess lanzadorJess) {

        this.lanzadorJess = lanzadorJess;
        
        initComponents();

        this.setLocationRelativeTo(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tablaPreguntas = new javax.swing.JTable();
        botonGenerar = new javax.swing.JButton();

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(vista.Principal.class).getContext().getResourceMap(InformeView.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tablaPreguntas.setModel(getModeloTabla());
        tablaPreguntas.setToolTipText(resourceMap.getString("tablaPreguntas.toolTipText")); // NOI18N
        tablaPreguntas.setName("tablaPreguntas"); // NOI18N
        jScrollPane1.setViewportView(tablaPreguntas);

        botonGenerar.setText(resourceMap.getString("botonGenerar.text")); // NOI18N
        botonGenerar.setName("botonGenerar"); // NOI18N
        botonGenerar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                generar(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                    .addComponent(botonGenerar))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botonGenerar)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 237, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generar(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_generar

      try {
        lanzadorJess.borrarConsejos();
        for(int i = 0; i<tam ; i++){

            if((Boolean) tablaPreguntas.getValueAt(i, 0)){

                lanzadorJess.insertaSlotValue("estado_actual", claves.elementAt(i));

                lanzadorJess.ejecutarJess();

            }
        }

        String texto = lanzadorJess.dameConsejos();

        while(texto.indexOf("   ")!=-1)
            texto = texto.replaceAll("   ", "  ");

        texto = texto.replaceAll("  ", "\n\t");

        while(texto.indexOf("\t")!=-1)
            texto = texto.replaceAll("\t", "    ");

        VisualizadorView visualizador = new VisualizadorView(texto);
        visualizador.setVisible(true);
        visualizador.setAlwaysOnTop(true);
        //JOptionPane.showMessageDialog(this, texto, "Informe de asesoramiento", JOptionPane.INFORMATION_MESSAGE);

        
      }catch(Exception e){

          JOptionPane.showMessageDialog(this,"Error al generar el informe: " + e.getMessage(), "Error informe asesoramiento",JOptionPane.ERROR_MESSAGE);

          e.printStackTrace();
      }

    }//GEN-LAST:event_generar

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InformeView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonGenerar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaPreguntas;
    // End of variables declaration//GEN-END:variables

    /**
     * Recupera el valor del fichero properties.
     * @param String Fichero properties al que se desea acceder
     * @return Properties
     */
    public static Properties getPropiedades(String ficheroProperties)
    {
      Properties propiedades = new Properties();

      try {
          FileInputStream fichero = new FileInputStream(ficheroProperties);
          propiedades.load(fichero);
          fichero.close();
      } catch (Exception e) {
          System.out.println("Error : " + e.toString());
      }
      return propiedades;
    } // Fin getPropiedades()

    public DefaultTableModel getModeloTabla(){

        Vector data = new Vector();
        Vector titulos = new Vector();
        claves = new Vector();
        Vector aux;

        Properties prop = getPropiedades("config/preguntas.properties");

        tam = prop.size()/2;

        for(int i = 1; i<=tam; i++){

            aux = new Vector();
            aux.add(false);
            aux.add(prop.getProperty("pregunta" + i));
            data.add(aux);
            claves.add(prop.getProperty("hecho" + i));
        }

        titulos.add("Informacion que desea");
        titulos.add("Preguntas");

        return new DefaultTableModel(data,titulos) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            @Override
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            @Override
            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        };
    }
}
